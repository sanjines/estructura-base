@use 'functions'as f;
@use 'sass:color'as c;
@use 'sass:list'as l;
@use 'sass:selector'as sel;

//- ========  MIXIN PARA CENTRADO ELEMENTO ======== -//
@mixin centra-elem ($border: null) {
	border-radius: $border;
	margin: 0 auto;
}

//- ========  MIXIN PARA CENTRADO ABSOLUTO ======== -//
@mixin centrar($horizontal: true, $vertica: true) {
	@if ($horizonta and $vertical) {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	} @else if() {
		left: 50%;
		transform: translate(-50%, 0);
	} @else if() {
		top: 50%;
		transform: translate(0, 50%);
	}
}

// Ejemplo de llamado de el moxin center
//  &.both {
//    @include center;
//  }

//  &.horizontal {
//    @include center(true, false);
//  }

//  &.vertical {
//    @include center(false, true);
//  }

// MIXIN PARA LINKS DE SEUDOELEMNTOS
@mixin linx ($link, $visit, $hover, $active) {
	a {
		color: $link;

		&:visited {
			color: $visit;
		}

		&:hover {
			color: $hover;
		}

		&:active {
			color: $active;
		}
	}
}

// UTILIZACIONDE DE MIXIN LINKS
// @include link-colors(#00c, #0cc, #c0c, #ccc, #cc0);

// MIXIN PARA DETERMINAR EL ANCHO DE UN ELEMENTO
@mixin width($width: 100%) {
	width: $width;
	margin: 0 auto;
}

// MIXIN PARA DETERMINAR EL CRECIMINTO MAXIMO ANCHO DE UN ELEMENTO
@mixin max-width($width: 100%) {
	width: $width;
	margin: 0 auto;
}

// MIXIN BORDER RADIUS
@mixin border-r($pixel) {
	border-radius: $pixel;
}

// MIXIN BORDER RADIUS
@mixin border-radius($top-left: null, $top-right:null, $bottom-right:null, $bottom-left:null) {
	border-radius: $top-left $top-right $bottom-right $bottom-left;
}

// FLEX BOX(SU IMPLEMENTACION ES ALGO COMPLICADO)
@mixin flex($option, $x, $y) {
	display: $option;
	justify-content: $x;
	align-items: $y;
}

//- ======== MIXIN PARA LA IMPLEMENTACION DE GRILLAS CON CSS GRID ======== -//
@mixin col1($grid: null, $col: null, $gutter: null) {
	@if ($grid) {
		display: $grid;
		grid-template-columns: $col;
		gap: $gutter;
	}
}

@mixin col($grid: null, $rep: null, $col: null, $gap: null) {
	@if ($grid) {
		display: $grid;
		grid-template-columns: repeat(append($rep, $col, $separator:comma));
		gap: $gap;
	}
}

@mixin row($rep: null, $row: null) {
	@if ($rep) {
		grid-template-rows: repeat(append($rep, $row, $separator:comma));
	}
}

// - FIN DE MIXIN

// ==============================================
// - ** MIXIN PARA LINEAS CON GRADIENTES  **
// ==============================================

@mixin line($m-w: null, $h: null, $b-st: null, $bg: null, $m-top: null) {
	@if ($m-w) {
		max-width: $m-w;
		height: $h;
		border-style: $b-st;

		background: $bg;
		margin-top: $m-top;
	}
}

// - FIN DE MIXIN

// ==============================================
// -  ******  MIXIN IMG-BG + OVERLAY  *******
// ==============================================

$route: '/assets/img/';

@function url-img($image-extencion) {
	@return url($route + $image-extencion);
}

@mixin bg-overlay($img, $width: 100%, $height: 100vh) {
	& {
		position: relative;
		width: $width;
		height: $height;
		background: {
			image: url-img($img);
			repeat: no-repeat;
			size: cover;
			position: center;
			attachment: fixed;
		}

		&::before {
			position: absolute;
			content: '';
			width: $width;
			height: $height;
			background: linear-gradient(80deg, rgba(255, 0, 0, 0.404), rgba(255, 166, 0, 0.377));
			// background: linear-gradient(45deg, rgba(119, 166, 253, 0.123), rgba(13, 18, 29, 0.986));
		}
	}
}

//- ======== FIN DE MIXIN ======== -//

// ==============================================
// -      **********  GRILLAS studiar ***********
// ==============================================

@mixin grid($colSpan, $gridColumns: 12, $margin: 1%, ) {
	$unitWidth: $gridColumns / $colSpan;
	float: left;
	width: (100 - $unitWidth * $margin) / $unitWidth;
	margin: 0 $margin/2;
}

//- ======== FIN DE MIXIN ======== -//

// ==============================================
// - **********  MIXIN BOTON  ***********
// ==============================================

@mixin button($name, $color, $border-radius...) {
	&--#{$name} {
		border-radius: $border-radius;
		border: 1px solid $color;
		color: $color;
		&:hover {
			background-color: $color;
			text-shadow: 1px 2px 2px c.scale(#0e0e0e, $lightness: -10%, $saturation: 10%);
			color: rgb(235, 235, 235);
		}
	}
}

// FIN FUNCION BOTON

//IMPLEMENTACION A CSS

// .boton{

//   & .btn-outline-primario {
//     padding: 5rem;
//     width: 100px;
//     height: 150px;
//     @include boton ('primario', pink, 5px);
// }

// ==============================================
// -**** RECORRIENDO ELEMENTOS CON NTH()
//- PARA ASIGNAR COLOR DE FONDO ***
// ==============================================

$alternating-colors: #f44336, #9c27b0, #2196f3, #4caf50, #ff9800, #9e9e9e;
@mixin alternating-background {
	@for $i from 1 through length($alternating-colors) {
		&:nth-child(#{length($alternating-colors)}n + #{$i}) {
			background-color: (l.nth($alternating-colors, $i));
		}
	}
}

//- APLICACION DE MIXINS

// .a {
//   @include alternating-background;
// }

// ==============================================
// -****   REMPLAZO DE ETIQUETA  ****
// ==============================================

@mixin contexto($contexto-actual, $nuevo-contexto) {
	@at-root #{sel.replace(&, $contexto-actual, $nuevo-contexto)} {
		@content;
	}
}
//- APLICACION DE MIXINS

// .re{
//   @include contexto('.re', '.der'){
//     color: red;
//   }
// }

// SALIDA
// .der-x {
//   color: orange;
// }
//- FIN DE MIXIN
